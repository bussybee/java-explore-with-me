DROP TABLE IF EXISTS users, locations, categories, events,
    requests, compilations, compilation_events, comments CASCADE;

CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name  VARCHAR(255) NOT NULL,
    email VARCHAR(350) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS locations
(
    id  INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    lat FLOAT,
    lon FLOAT
);

CREATE TABLE IF NOT EXISTS categories
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    name VARCHAR(50)                              NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS events
(
    id                 BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    title              VARCHAR(120),
    annotation         VARCHAR(2000),
    description        VARCHAR(7000),
    location_id        INTEGER NOT NULL REFERENCES locations (id),
    category_id        INTEGER REFERENCES categories (id),
    initiator_id       INTEGER NOT NULL REFERENCES users (id),
    event_date         TIMESTAMP,
    created_on         TIMESTAMP,
    published_on       TIMESTAMP,
    participant_limit  INTEGER,
    confirmed_requests INTEGER,
    views              INTEGER,
    paid               BOOLEAN,
    request_moderation BOOLEAN,
    state              VARCHAR
);

CREATE TABLE IF NOT EXISTS requests
(
    id           BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    requester_id INTEGER NOT NULL REFERENCES users (id),
    event_id     INTEGER NOT NULL REFERENCES events (id),
    created      timestamp,
    status       VARCHAR
);

CREATE TABLE IF NOT EXISTS compilations
(
    id     BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    title  VARCHAR(120),
    pinned BOOLEAN
);

CREATE TABLE IF NOT EXISTS compilation_events
(
    compilation_id BIGINT REFERENCES compilations (id) ON DELETE CASCADE,
    event_id       BIGINT REFERENCES events (id) ON DELETE CASCADE,
    PRIMARY KEY (compilation_id, event_id)
);

CREATE TABLE IF NOT EXISTS comments
(
    id        BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    content   VARCHAR(500),
    author_id INTEGER NOT NULL REFERENCES users (id),
    event_id  INTEGER NOT NULL REFERENCES events (id),
    created   TIMESTAMP,
    modified  TIMESTAMP,
    edited    BOOLEAN
);

